#include "Piece.h"
#include <vector>

using namespace std;

ostream& operator<<(ostream& os, const Piece& piece) {
    if (piece.getColor()) {
            os << piece.getSymbol();
    } else {
            os << (char)tolower(piece.getSymbol());
    }
    return os;
}

int Piece::pointValue() const {
    switch (symbol) {
        case 'P':
            return 1;
        case 'N':
            return 3;
        case 'B':
            return 3;
        case 'R':
            return 5;
        case 'Q':
            return 9;
        default:
            return 0;
    }
}

double Piece::locationAdjustment(string square) const {
    vector<vector<double>> pieceTable = getPieceTable();
    int row = square[1] - '1';
    int col = square[0] - 'a';
    if (color) {
        return pieceTable[7-row][col];
    } else {
        return pieceTable[row][col];
    }
}

vector<vector<double>> Piece::getPieceTable() const {
    vector<vector<double>> pieceTable;
    switch (symbol) {
        case 'P':
            pieceTable = {{0, 0, 0, 0, 0, 0, 0, 0},
                          {0.9, 1, 1, 1, 1, 1, 1, 0.9},
                          {0.6, 0.6, 0.7, 0.7, 0.7, 0.7, 0.6, 0.6},
                          {0.3, 0.3, 0.4, 0.6, 0.6, 0.4, 0.3, 0.3},
                          {0.1, 0.2, 0.4, 0.5, 0.5, 0.4, 0.2, 0.1},
                          {0.1, 0.4, 0, 0.3, 0.3, 0, 0.4, 0.1},
                          {0, 0, -0.2, -0.5, -0.5, -0.2, 0, 0},
                          {0, 0, 0, 0, 0, 0, 0, 0}};
            break;
        case 'N':
            pieceTable = {{-0.9, -0.6, 0, 0, 0, 0, -0.6, -0.9},
                          {-0.5, 0, 0, 0.2, 0.2, 0, 0, -0.5},
                          {-0.2, 0.4, 0.5, 0.6, 0.6, 0.5, 0.4, -0.2},
                          {-0.2, 0.5, 0.8, 1, 1, 0.8, 0.5, -0.2},
                          {-0.3, 0.5, 0.7, 1, 1, 0.7, 0.5, -0.3},
                          {-0.5, 0.4, 0.5, 0.3, 0.3, 0.5, 0.4 -0.5},
                          {-0.5, -0.2, 0.2, 0.4, 0.4, 0.2, -0.2, -0.5},
                          {-1, -0.7, -0.1, -0.2, -0.2, -0.1, -0.7, -1}};
            break;
        case 'B':
            pieceTable = {{-0.8, -0.4, -0.2, -0.2, -0.2, -0.2, -0.4, -0.8},
                          {-0.2, 0, 0, 0, 0, 0, 0, -0.2},
                          {0, 0, 0, 0, 0, 0, 0, 0},
                          {0, 0.3, 0, 0, 0, 0, 0.3, 0},
                          {0, 0.2, 0.7, 0.2, 0.2, 0.7, 0.2, 0},
                          {0, 0.2, 0.2, 0.3, 0.3, 0.2, 0.2, 0},
                          {-0.2, 0.6, 0.2, 0.4, 0.4, 0.2, 0.6, -0.2},
                          {-0.8, -0.4, -0.2, -0.2, -0.2, -0.2, -0.4, -0.8}};
            break;
        case 'R':
            pieceTable = {{-0.2, 0, 0.1, 0.1, 0.1, 0.1, 0, -0.2},
                          {0.3, 0.4, 0.7, 0.7, 0.7, 0.7, 0.4, 0.3},
                          {0, 0, 0, 0, 0, 0, 0, 0},
                          {0, 0, 0, 0, 0, 0, 0, 0},
                          {0, 0, 0, 0, 0, 0, 0, 0},
                          {0.1, 0, 0.1, 0.1, 0.1, 0.1, 0, 0.1},
                          {-0.3, -0.3, 0.1, 0.6, 0.6, 0.1, -0.3, -0.3},
                          {-0.5, -0.1, 0.1, 0.8, 0.8, 0.1, -0.1, -0.5}};
            break;
        case 'Q':
            pieceTable = {{-0.2, 0, 0, 0, 0, 0, 0, -0.2},
                          {0, 0, 0, 0, 0, 0, 0, 0},
                          {0, 0, 0, 0, 0, 0, 0, 0},
                          {0, 0, 0, 0, 0, 0, 0, 0},
                          {0, 0, 0, 0.1, 0.1, 0, 0, 0},
                          {0, 0, 0, 0.2, 0.2, 0, 0, 0},
                          {-0.1, 0, 0, 0.2, 0.2, 0, 0, -0.1},
                          {-0.6, -0.3, 0, 0, 0, 0, -0.3, -0.6}};
            break;
        case 'K':
            pieceTable = {{0, 0, 0, 0, 0, 0, 0, 0},
                          {0, 0, 0, 0, 0, 0, 0, 0},
                          {0, 0, 0, 0, 0, 0, 0, 0},
                          {0, 0, 0, -0.2, -0.2, 0, 0, 0},
                          {0, 0, 0, -0.2, -0.2, 0, 0, 0},
                          {0, 0, 0, 0, 0, 0, 0, 0},
                          {0, 0, 0, 0, 0, 0, 0, 0},
                          {0.1, 0.2, 0, 0, 0, 0.1, 0.2, 0.1}};
            break;
    }
    return pieceTable;
}
